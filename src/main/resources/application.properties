quarkus.profile=default

bob.unit.service-domain=${domain}

quarkus.rest-client.base-url.url=${env.quarkus.rest-client.base-url.url}

bob.unit.engine-rest-url=${env.bob.unit.engine-rest-url}
bob.unit.backoff-multiplier=${env.bob.unit.backoff-multiplier}
bob.unit.max-backoff-delay=${env.bob.unit.max-backoff-delay}
bob.unit.wait-time=${env.bob.unit.wait-time}
bob.unit.use-priority=${env.bob.unit.use-priority}
bob.unit.retry-count=${env.bob.unit.retry-count}
bob.unit.retry-delay=${env.bob.unit.retry-delay}

bob.unit.rest-client-read-timeout=${env.bob.unit.rest-client-read-timeout}
bob.unit.rest-client-connect-timeout=${env.bob.unit.rest-client-connect-timeout}
bob.unit.rest-client-max-pool-size=${env.bob.unit.rest-client-max-pool-size}
bob.unit.rest-client-max-per-route=${env.bob.unit.rest-client-max-per-route}

bob.unit.api-async-response-timeout=${env.bob.unit.api-async-response-timeout}
bob.unit.api-worker-count=${env.bob.unit.api-worker-count}
bob.unit.api-max-tasks=${env.bob.unit.api-max-tasks}
bob.unit.api-worker-id=${env.bob.unit.api-worker-id}
bob.unit.api-lock-duration=${env.bob.unit.api-lock-duration}

bob.unit.terraform-async-response-timeout=${env.bob.unit.terraform-async-response-timeout}
bob.unit.terraform-worker-count=${env.bob.unit.terraform-worker-count}
bob.unit.terraform-max-tasks=${env.bob.unit.terraform-max-tasks}
bob.unit.terraform-worker-id=${env.bob.unit.terraform-worker-id}
bob.unit.terraform-lock-duration=${env.bob.unit.terraform-lock-duration}

bob.unit.shell-script-async-response-timeout=${env.bob.unit.shell-script-async-response-timeout}
bob.unit.shell-script-worker-count=${env.bob.unit.shell-script-worker-count}
bob.unit.shell-script-max-tasks=${env.bob.unit.shell-script-max-tasks}
bob.unit.shell-script-worker-id=${env.bob.unit.shell-script-worker-id}
bob.unit.shell-script-lock-duration=${env.bob.unit.shell-script-lock-duration}

bob.unit.ansible-async-response-timeout=${env.bob.unit.ansible-async-response-timeout}
bob.unit.ansible-worker-count=${env.bob.unit.ansible-worker-count}
bob.unit.ansible-max-tasks=${env.bob.unit.ansible-max-tasks}
bob.unit.ansible-worker-id=${env.bob.unit.ansible-worker-id}
bob.unit.ansible-lock-duration=${env.bob.unit.ansible-lock-duration}

bob.unit.python-async-response-timeout=${env.bob.unit.python-async-response-timeout}
bob.unit.python-worker-count=${env.bob.unit.python-worker-count}
bob.unit.python-max-tasks=${env.bob.unit.python-max-tasks}
bob.unit.python-worker-id=${env.bob.unit.python-worker-id}
bob.unit.python-lock-duration=${env.bob.unit.python-lock-duration}


# TF Web Configuration
bob.unit.tf-entity-ingestion-url=${env.bob.unit.tf-entity-ingestion-url}
bob.unit.api-metering-dto-schema-id=${env.bob.unit.api-metering-dto-schema-id}
bob.unit.job-status-dto-schema-id=${env.bob.unit.job-status-dto-schema-id}
bob.unit.infra-dto-schema-id=${env.bob.unit.infra-dto-schema-id}
bob.unit.user-dto-schema-id=${env.bob.unit.user-dto-schema-id}

#vault configuration
quarkus.vault.url=${env.quarkus.vault.url}
quarkus.vault.authentication.client-token=${env.quarkus.vault.authentication.client-token}

bob.unit.marketplace-master-config-url=${env.bob.unit.marketplace-master-config-url}
bob.unit.marketplace-alliance-url=${env.bob.unit.marketplace-alliance-url}

quarkus.native.additional-build-args=--report-unsupported-elements-at-runtime

bob.unit.acl-action-log-schema-id=${env.bob.unit.acl-action-log-schema-id}

bob.unit.grpc-server-address=${env.bob.unit.grpc-server-address}

bob.unit.grpc-server-port=${env.bob.unit.grpc-server-port}

bob.unit.bob-get-pipeline-url=${env.bob.unit.bob-get-pipeline-url}

quarkus.jacoco.excludes=**/unit/aclmodels/**,**/unit/config/**,**/unit/dto/**,**/unit/exception/**,**/unit/grpc/**
lombok.addLombokGeneratedAnnotation=true

microprofile.rest.client.disable.default.mapper=false

# Kafka Configuration
mp.messaging.outgoing.action-log.connector=${env.mp.messaging.outgoing.action-log.connector}
mp.messaging.outgoing.action-log.topic=${env.mp.messaging.outgoing.action-log.topic}
mp.messaging.outgoing.action-log.value.serializer=${env.mp.messaging.outgoing.action-log.value.serializer}
mp.messaging.outgoing.action-log.acks=${env.mp.messaging.outgoing.action-log.acks}
mp.messaging.outgoing.action-log.bootstrap.servers=${env.mp.messaging.outgoing.action-log.bootstrap.servers}

server.shutdown=${server.shutdown}
spring.lifecycle.timeout-per-shutdown-phase=${spring.lifecycle.timeout-per-shutdown-phase}

mp.messaging.outgoing.node-relation.connector=${env.mp.messaging.outgoing.node-relation.connector}
mp.messaging.outgoing.node-relation.topic=${env.mp.messaging.outgoing.node-relation.topic}
mp.messaging.outgoing.node-relation.value.serializer=${env.mp.messaging.outgoing.node-relation.value.serializer}
mp.messaging.outgoing.node-relation.acks=${env.mp.messaging.outgoing.node-relation.acks}
mp.messaging.outgoing.node-relation.bootstrap.servers=${env.mp.messaging.outgoing.node-relation.bootstrap.servers}

# Redis Configuration
bob.unit.redis-host=${env.bob.bob.unit.redis-host}
bob.unit.redis-password=${env.bob.unit.redis-password}
bob.unit.redis-password-enable=${env.bob.unit.redis-password-enable}
bob.unit.redis-cluster-enable=${env.bob.unit.redis-cluster-enable}

# Datasource Configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${env.quarkus.datasource.username}
quarkus.datasource.password=${env.quarkus.datasource.jdbc.password}
quarkus.datasource.jdbc.url=${env.quarkus.datasource.jdbc.url}

# HistoryDb Datasource Configuration
quarkus.datasource.history.db-kind=postgresql
quarkus.datasource.history.username=${env.quarkus.datasource.username}
quarkus.datasource.history.password=${env.quarkus.datasource.jdbc.password}
quarkus.datasource.history.jdbc.url=${env.quarkus.datasource.history.jdbc.url}

# JPA Configuration
quarkus.hibernate-orm.database.generation=${env.quarkus.hibernate-orm.database.generation}

# Management Endpoints Configuration
quarkus.smallrye-health.root-path=/health

bob.unit.service-latest-wf=${env.bob.unit.service-latest-wf}
bob.unit.service-deployed-version=${env.bob.unit.service-deployed-version}
bob.unit.service-save-deployment=${env.bob.unit.service-save-deployment}
bob.unit.service-deployed-wf=${env.bob.unit.service-deployed-wf}

bob.unit.acl-create-bulk-node-relation-url=${env.bob.unit.acl.create-bulk-node-relation-url}
bob.unit.acl-delete-node-relation-url=${env.bob.unit.acl.delete-node-relation-url}

quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui
quarkus.smallrye-openapi.path=/bob-unit-quarkus/v3/api-docs

management.endpoints.web.exposure.include=metrics,health,info,prometheus,threaddump
management.endpoint.metrics.enabled=true
management.metrics.tags.application=camunda-standalone

quarkus.camunda.webapps.enabled=true
camunda.admin.user=demo
camunda.admin.password=demo
camunda.history.time-to-live=30
camunda.history.event-handler.enabled=false
